Required:

- 4GB PC/VPS running Ubuntu 16.04 Server, minimum 120GB HDD (SSD preferable)
- SSH, Putty, WinSCP and Notepad++
- Some basic linux knowledge

This guide assumes you have SSH setup, logged in and you are NOT using the root account.

First of all let's get up to date:

sudo apt-get update && sudo apt-get dist-upgrade -y

Next, install dependencies:

sudo apt-get install build-essential make git screen redis-server nginx -y
wget https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz
tar -xvf go1.9.2.linux-amd64.tar.gz
rm go1.9.2.linux-amd64.tar.gz
sudo mv go /usr/local
export GOROOT=/usr/local/go
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
export GOPATH=$HOME/go
go version #if installed correctly, you should get a version response

Next, install NVM and Node

sudo apt-get install npm -y
npm install v4

Now to install Geth

wget https://github.com/ethereumproject/go-ethereum/releases/download/v5.5.1/geth-classic-linux-v5.5.1-8a3bc2d.tar.gz
tar -xvf geth-classic-linux-v5.5.1-8a3bc2d.tar.gz
rm geth-classic-linux-v5.5.1-8a3bc2d.tar.gz

Run Geth for the first time with fast-sync to download the blockchain.
We will do this in a screen session so that we can continue with other things
and allow Geth to work in the background.

screen -dmS geth ./geth --fast --cache=1024

Then, install Open Ethereum Classic Pool

git clone https://github.com/diabloblack/open-ethereum-classic-pool.git
cd open-ethereum-classic-pool
export GOROOT=/usr/local/go
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
export GOPATH=$HOME/go
make


Ok, most things are installed now so let's start some configuration.

First of all let's configure the pool. Using WinSCP, navigate to /home/user/open-ethereum-classic-pool and edit config.json.

The only thing you need to change is 

"listen": "0.0.0.0:8080",

under API. This needs to be set to your PC/VPS's IP address. i.e.

"listen": "192.168.1.20:8080",

Save and Close config.json

Next, navigate to /home/user/open-ethereum-classic-pool/www/config and edit environment.js.

There are three lines you need to change here:

ApiUrl: '//example.net/',
HttpHost: 'http://example.net',
StratumHost: 'example.net',


They should match your IP address or Domain Name i.e.

ApiUrl: '//mydomain.net/',
HttpHost: 'http://mydomain.net',
StratumHost: 'mydomain.net',

Save and Close environment.js

Next we need to configure the nginx webserver. If using WinSCP, you will need to log in with root.

Navigate to /etc/nginx/sites-available and edit default

Delete everything in the file and replace it with the text below.
Be sure to change with your info a) server name, b) path to pool, i.e. change 'user' to your user name, and c) upstream api IP address:

server {
        listen 80;
        listen [::]:80;

        server_name mydomain.net;

        root /home/user/open-ethereum-classic-pool/www/dist;
        index index.html;

        location / {
               try_files $uri $uri/ =404;
        }
        
        location /api {
                proxy_pass http://api;
        }
}

upstream api {
    server 192.168.1.20:8080;
}

Save and Close default

Go back to Putty and restart nginx

service restart nginx

Ok, a little bit more installation then we can start the pool. This will build the front end.

cd
cd open-ethereum-classic-pool/www
sudo ln -s `which nodejs` /usr/bin/node
sudo npm install -g ember-cli@2.9.1
sudo npm install -g bower
sudo npm install
bower install
./build.sh

Time to check on Geth.

screen -r geth

It can sometimes take a long time to sync and there's no point moving on to the next step until it has.
You want to see 'import' not 'sync'. You can also check the current block height on any explorer to see how close it is.
The last ~100 blocks can take a very long time to sync. Once you're sure it's done and is importing blocks one at a time, move on to the next step.

CTRL-A then CTRL-D to exit the geth screen. We're going to attach a console to the geth instance already running.

cd
./geth attach

This will open the console where you can issue commands to Geth. We are going to create an account.

>personal.newAccount()

enter a password, re-enter the password, then record the address produced and the password.

This is also a good opportunity to confirm Geth is synced. These two commands will help you determine if it synced or not.

>eth.blockNumber
>eth.syncing

Ok, exit the console by typing 'exit'

Go back to Geth with 'screen -r geth', stop Geth with CTRL-C. The screen session should also terminate.

Create a new screen session 'screen -S geth' and this time we are going to start geth with a command to unlock the account you just created and also allow rpc calls.

./geth --unlock=0 --rpc --cache=1024

You will be prompted for your account password, enter it then wait a few minutes for Geth to catch up with the network again.
When you start seeing 'import' instead of 'sync' you should be good.

CTRL-A then CTRL-D to exit the screen session and leave Geth running in the background.

Before we can run the pool, there's one more small configruation change to do.

Using WinSCP, navigate to /home/user/open-ethereum-classic-pool and edit payouts.json

Under the payouts section you will need to put in the pool wallet address you just created:

"address": "YourPoolWalletAddressHere",

Save and Close payouts.json

Almost there! Time to run the pool software. OECP needs to run in three seperate parts so we will create a screen session for each.

First let's run the unlocker.

screen -S unlocker
cd open-ethereum-classic-pool
./build/bin/open-ethereum-classic-pool unlocker.json

CTRL-A then CTRL-D to exit that screen and leave it running in the background

Second let's run the payouts module

screen -S payouts
cd open-ethereum-classic-pool
./build/bin/open-ethereum-classic-pool payouts.json

CTRL-A then CTRL-D to exit that screen and leave it running in the background

AND finally, the main pool

screen -S OECP
cd open-ethereum-classic-pool
./build/bin/open-ethereum-classic-pool config.json


You can watch this screen to see miners connecting and sending shares. Be sure to exit with CTRL-A then CTRL-D to leave the pool running.
In a web browser, enter the IP or Domain Name of your PC/VPS to see the Pool.

